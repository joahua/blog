<?php
/*
Plugin Name: CurlyEnc
Version:0.3
Plugin URI: http://www.joahua.com/blog/
Description: CurlyEnc converts already-curly quotation marks to properly encoded HTML entities.
Author: Joshua Street
Author URI: http://www.joahua.com/blog/
*/ 

// the function
function js_curlyenc($text) {
$word = array(
//Symbols
	"¡" => "&#161;",
	"¤" => "&#164;",
	"¢" => "&#162;",
	"£" => "&#163;",
	"¥" => "&#165;",
	"¦" => "&#166;",
	"§" => "&#167;",
	"¨" => "&#168;",
	"©" => "&#169;",
	"ª" => "&#170;",
	"«" => "&#171;",
	"¬" => "&#172;",
	"­" => "&#173;",
	"®" => "&#174;",
	"™" => "&#8482;",
	"¯" => "&#175;",
	"°" => "&#176;",
	"±" => "&#177;",
	"²" => "&#178;",
	"³" => "&#179;",
	"´" => "&#180;",
	"µ" => "&#181;",
	"¶" => "&#182;",
	"·" => "&#183;",
	"¸" => "&#184;",
	"¹" => "&#185;",
	"º" => "&#186;",
	"»" => "&#187;",
	"¼" => "&#188;",
	"½" => "&#189;",
	"¾" => "&#190;",
	"¿" => "&#191;",
	"×" => "&#215;",
	"÷" => "&#247;",
//International characters
	"À" => "&#192;",
	"Á" => "&#193;",
	"Â" => "&#194;",
	"Ã" => "&#195;",
	"Ä" => "&#196;",
	"Å" => "&#197;",
	"Æ" => "&#198;",
	"Ç" => "&#199;",
	"È" => "&#200;",
	"É" => "&#201;",
	"Ê" => "&#202;",
	"Ë" => "&#203;",
	"Ì" => "&#204;",
	"Í" => "&#205;",
	"Î" => "&#206;",
	"Ï" => "&#207;",
	"Ð" => "&#208;",
	"Ñ" => "&#209;",
	"Ò" => "&#210;",
	"Ó" => "&#211;",
	"Ô" => "&#212;",
	"Õ" => "&#213;",
	"Ö" => "&#214;",
	"Ø" => "&#216;",
	"Ù" => "&#217;",
	"Ú" => "&#218;",
	"Û" => "&#219;",
	"Ü" => "&#220;",
	"Ý" => "&#221;",
	"Þ" => "&#222;",
	"ß" => "&#223;",
	"à" => "&#224;",
	"á" => "&#225;",
	"â" => "&#226;",
	"ã" => "&#227;",
	"ä" => "&#228;",
	"å" => "&#229;",
	"æ" => "&#230;",
	"ç" => "&#231;",
	"è" => "&#232;",
	"é" => "&#233;",
	"ê" => "&#234;",
	"ë" => "&#235;",
	"ì" => "&#236;",
	"í" => "&#237;",
	"î" => "&#238;",
	"ï" => "&#239;",
	"ð" => "&#240;",
	"ñ" => "&#241;",
	"ò" => "&#242;",
	"ó" => "&#243;",
	"ô" => "&#244;",
	"õ" => "&#245;",
	"ö" => "&#246;",
	"ø" => "&#248;",
	"ù" => "&#249;",
	"ú" => "&#250;",
	"û" => "&#251;",
	"ü" => "&#252;",
	"ý" => "&#253;",
	"þ" => "&#254;",
	"ÿ" => "&#255;",
//Special characters
	"–" => "&#8211;",
	"—" => "&#8212;",
	"‘" => "&#8216;",
	"’" => "&#8217;",
	"“" => "&#8220;",
	"”" => "&#8221;",
	"…" => "&#8230;",
	"‹" => "&#8249;",
	"›" => "&#8250;",
	"€" => "&#8364;",
);

	foreach ($word as $bad => $good) {
	    $text = str_replace($bad, $good, $text);
    }
    return $text;
}

// apply the function
add_filter('the_content', 'js_curlyenc');

?>
